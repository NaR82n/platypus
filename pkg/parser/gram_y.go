// Code generated by goyacc -o gram_y.go gram.y. DO NOT EDIT.

//line gram.y:7
package parser

import __yyfmt__ "fmt"

//line gram.y:7

import (
	plast "github.com/GuanceCloud/platypus/pkg/ast"
	// pltoken "github.com/GuanceCloud/platypus/pkg/token"
)

//line gram.y:16
type yySymType struct {
	yys      int
	aststmts plast.Stmts
	astblock *plast.BlockStmt

	ifitem *plast.IfStmtElem
	iflist []*plast.IfStmtElem
	node   *plast.Node
	nodes  []*plast.Node
	item   Item
}

const SEMICOLON = 57346
const COMMA = 57347
const COMMENT = 57348
const DOT = 57349
const EOF = 57350
const ERROR = 57351
const ID = 57352
const NUMBER = 57353
const LEFT_PAREN = 57354
const LEFT_BRACKET = 57355
const LEFT_BRACE = 57356
const RIGHT_BRACE = 57357
const RIGHT_PAREN = 57358
const RIGHT_BRACKET = 57359
const SPACE = 57360
const STRING = 57361
const QUOTED_STRING = 57362
const MULTILINE_STRING = 57363
const FOR = 57364
const IN = 57365
const WHILE = 57366
const BREAK = 57367
const CONTINUE = 57368
const RETURN = 57369
const EOL = 57370
const COLON = 57371
const STR = 57372
const INT = 57373
const FLOAT = 57374
const BOOL = 57375
const LIST = 57376
const MAP = 57377
const STRUCT = 57378
const ANY = 57379
const LET = 57380
const FN = 57381
const RET_SYMB = 57382
const NOT = 57383
const BitwiseXOR = 57384
const BitwiseOR = 57385
const BitwiseNOT = 57386
const BitwiseAND = 57387
const CONST = 57388
const operatorsStart = 57389
const ADD = 57390
const DIV = 57391
const GTE = 57392
const GT = 57393
const LT = 57394
const LTE = 57395
const MOD = 57396
const MUL = 57397
const NEQ = 57398
const EQ = 57399
const EQEQ = 57400
const SUB = 57401
const operatorsEnd = 57402
const keywordsStart = 57403
const TRUE = 57404
const FALSE = 57405
const IDENTIFIER = 57406
const AND = 57407
const OR = 57408
const NIL = 57409
const NULL = 57410
const IF = 57411
const ELIF = 57412
const ELSE = 57413
const keywordsEnd = 57414
const startSymbolsStart = 57415
const START_STMTS = 57416
const startSymbolsEnd = 57417
const UMINUS = 57418

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"SEMICOLON",
	"COMMA",
	"COMMENT",
	"DOT",
	"EOF",
	"ERROR",
	"ID",
	"NUMBER",
	"LEFT_PAREN",
	"LEFT_BRACKET",
	"LEFT_BRACE",
	"RIGHT_BRACE",
	"RIGHT_PAREN",
	"RIGHT_BRACKET",
	"SPACE",
	"STRING",
	"QUOTED_STRING",
	"MULTILINE_STRING",
	"FOR",
	"IN",
	"WHILE",
	"BREAK",
	"CONTINUE",
	"RETURN",
	"EOL",
	"COLON",
	"STR",
	"INT",
	"FLOAT",
	"BOOL",
	"LIST",
	"MAP",
	"STRUCT",
	"ANY",
	"LET",
	"FN",
	"RET_SYMB",
	"NOT",
	"BitwiseXOR",
	"BitwiseOR",
	"BitwiseNOT",
	"BitwiseAND",
	"CONST",
	"operatorsStart",
	"ADD",
	"DIV",
	"GTE",
	"GT",
	"LT",
	"LTE",
	"MOD",
	"MUL",
	"NEQ",
	"EQ",
	"EQEQ",
	"SUB",
	"operatorsEnd",
	"keywordsStart",
	"TRUE",
	"FALSE",
	"IDENTIFIER",
	"AND",
	"OR",
	"NIL",
	"NULL",
	"IF",
	"ELIF",
	"ELSE",
	"keywordsEnd",
	"startSymbolsStart",
	"START_STMTS",
	"startSymbolsEnd",
	"UMINUS",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line gram.y:667

//line yacctab:1
var yyExca = [...]int16{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 253,
	1, 89,
	4, 89,
	8, 89,
	28, 89,
	-2, 161,
}

const yyPrivate = 57344

const yyLast = 2031

var yyAct = [...]int16{
	26, 328, 35, 180, 8, 117, 3, 123, 181, 367,
	152, 66, 76, 17, 81, 79, 357, 17, 342, 96,
	97, 334, 95, 83, 349, 98, 101, 322, 280, 255,
	36, 102, 100, 316, 96, 137, 99, 95, 17, 206,
	98, 101, 359, 347, 116, 257, 102, 100, 153, 126,
	56, 99, 348, 82, 17, 323, 281, 254, 127, 128,
	129, 130, 131, 132, 101, 363, 139, 205, 142, 102,
	100, 146, 134, 143, 278, 118, 120, 121, 2, 153,
	149, 291, 154, 284, 325, 157, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 147, 207, 153, 179, 184, 177,
	335, 188, 189, 184, 95, 183, 187, 98, 101, 194,
	192, 190, 336, 102, 100, 327, 108, 203, 99, 56,
	310, 107, 106, 110, 213, 145, 178, 216, 185, 186,
	218, 220, 209, 185, 193, 77, 225, 115, 313, 69,
	307, 226, 56, 200, 228, 211, 247, 248, 315, 251,
	232, 294, 209, 202, 17, 237, 243, 214, 136, 78,
	258, 258, 314, 56, 148, 230, 262, 201, 209, 234,
	135, 269, 259, 241, 238, 239, 240, 289, 74, 260,
	242, 125, 245, 125, 125, 271, 272, 261, 270, 209,
	210, 140, 133, 229, 4, 119, 275, 209, 244, 209,
	56, 19, 209, 232, 96, 97, 105, 95, 232, 232,
	98, 101, 87, 88, 91, 92, 102, 100, 93, 232,
	94, 99, 234, 55, 274, 20, 345, 234, 234, 217,
	113, 124, 1, 354, 311, 112, 111, 346, 234, 232,
	297, 299, 122, 355, 312, 302, 232, 18, 305, 306,
	290, 304, 288, 308, 125, 30, 264, 232, 234, 309,
	224, 114, 287, 199, 7, 234, 263, 47, 75, 28,
	223, 44, 320, 198, 15, 34, 234, 33, 108, 32,
	232, 64, 232, 107, 106, 110, 232, 330, 233, 104,
	108, 39, 67, 232, 155, 107, 106, 110, 40, 234,
	150, 234, 236, 38, 41, 234, 42, 340, 326, 37,
	235, 231, 234, 9, 344, 329, 232, 13, 68, 14,
	12, 11, 10, 29, 232, 351, 16, 305, 21, 353,
	352, 80, 31, 356, 6, 234, 5, 358, 27, 361,
	46, 233, 0, 234, 0, 0, 233, 233, 365, 232,
	0, 232, 0, 0, 0, 109, 0, 233, 368, 0,
	0, 232, 0, 0, 0, 0, 329, 273, 234, 0,
	234, 0, 276, 277, 0, 0, 0, 233, 0, 0,
	234, 0, 0, 283, 233, 0, 0, 0, 144, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 151, 0,
	0, 109, 0, 292, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	233, 303, 0, 208, 233, 0, 0, 212, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 204,
	0, 151, 0, 0, 318, 151, 319, 0, 0, 0,
	321, 0, 0, 0, 233, 246, 0, 324, 0, 252,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 253, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 233, 343, 233,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 196, 109, 0, 0, 0, 0, 0,
	0, 279, 0, 360, 0, 362, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 151,
	96, 97, 0, 95, 0, 0, 98, 101, 87, 88,
	91, 92, 102, 100, 93, 86, 94, 99, 295, 0,
	298, 300, 301, 90, 89, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 253, 253,
	151, 0, 0, 0, 0, 0, 96, 97, 317, 95,
	0, 0, 98, 101, 87, 88, 91, 92, 102, 100,
	93, 0, 94, 99, 0, 0, 151, 331, 332, 90,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 151, 0, 151, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 19, 0, 151, 63, 0,
	0, 0, 55, 70, 65, 43, 0, 0, 0, 151,
	51, 56, 52, 22, 0, 0, 24, 23, 25, 20,
	0, 0, 0, 0, 0, 0, 74, 45, 0, 71,
	73, 0, 61, 0, 0, 62, 58, 72, 0, 59,
	0, 0, 0, 0, 0, 0, 57, 0, 0, 0,
	60, 0, 0, 49, 50, 0, 0, 63, 53, 54,
	48, 55, 70, 65, 43, 115, 0, 0, 0, 51,
	56, 52, 22, 0, 0, 24, 23, 25, 0, 0,
	0, 0, 0, 0, 0, 74, 45, 0, 71, 73,
	0, 61, 0, 0, 62, 58, 72, 0, 59, 0,
	0, 0, 0, 0, 0, 57, 0, 0, 0, 60,
	0, 0, 49, 50, 0, 0, 63, 53, 54, 48,
	55, 70, 65, 43, 103, 0, 0, 0, 51, 56,
	52, 22, 0, 0, 24, 23, 25, 0, 0, 0,
	0, 0, 0, 0, 74, 45, 0, 71, 73, 0,
	61, 0, 0, 62, 58, 72, 0, 59, 0, 0,
	0, 0, 0, 0, 57, 0, 0, 0, 60, 0,
	0, 49, 50, 0, 0, 63, 53, 54, 48, 55,
	70, 65, 43, 0, 0, 0, 0, 51, 56, 52,
	22, 0, 0, 24, 23, 25, 0, 0, 0, 0,
	0, 0, 0, 74, 45, 0, 71, 73, 0, 61,
	0, 0, 62, 58, 72, 0, 59, 0, 0, 0,
	0, 0, 0, 57, 0, 0, 0, 60, 0, 0,
	49, 50, 0, 0, 63, 53, 54, 48, 55, 70,
	65, 85, 0, 191, 0, 0, 51, 56, 52, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 74, 0, 0, 0, 0, 0, 61, 0,
	0, 62, 58, 0, 0, 59, 0, 0, 0, 0,
	0, 0, 57, 0, 0, 0, 60, 0, 0, 49,
	50, 0, 63, 0, 53, 54, 55, 70, 65, 85,
	0, 182, 0, 0, 51, 56, 52, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 0,
	74, 0, 0, 0, 0, 0, 61, 0, 0, 62,
	58, 0, 0, 59, 0, 0, 0, 0, 0, 0,
	57, 0, 0, 0, 60, 0, 0, 49, 50, 0,
	63, 0, 53, 54, 55, 70, 65, 85, 0, 0,
	138, 0, 51, 56, 52, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 74, 0,
	0, 0, 0, 0, 61, 0, 0, 62, 58, 0,
	0, 59, 0, 0, 0, 0, 0, 0, 57, 0,
	137, 0, 60, 0, 0, 49, 50, 0, 0, 249,
	53, 54, 63, 0, 0, 0, 55, 70, 65, 85,
	0, 0, 0, 0, 51, 56, 52, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	74, 0, 0, 0, 0, 0, 61, 0, 0, 62,
	58, 0, 0, 59, 0, 0, 0, 0, 0, 0,
	57, 0, 0, 0, 60, 0, 0, 49, 50, 0,
	63, 0, 53, 54, 55, 70, 65, 85, 115, 0,
	0, 0, 51, 56, 52, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 74, 0,
	0, 0, 0, 0, 61, 0, 0, 62, 58, 0,
	0, 59, 0, 0, 0, 0, 0, 0, 57, 0,
	0, 0, 60, 0, 0, 49, 50, 0, 63, 0,
	53, 54, 55, 70, 65, 85, 0, 0, 219, 0,
	51, 56, 52, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 74, 0, 0, 0,
	0, 0, 61, 0, 0, 62, 58, 0, 0, 59,
	0, 0, 0, 0, 0, 0, 57, 0, 0, 0,
	60, 0, 0, 49, 50, 0, 63, 0, 53, 54,
	55, 70, 65, 85, 0, 0, 215, 0, 51, 56,
	52, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 74, 0, 0, 0, 0, 0,
	61, 0, 0, 62, 58, 0, 0, 59, 0, 0,
	0, 0, 0, 0, 57, 0, 0, 0, 60, 0,
	0, 49, 50, 0, 0, 158, 53, 54, 63, 0,
	0, 0, 55, 70, 65, 85, 0, 0, 0, 0,
	51, 56, 52, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 74, 0, 0, 0,
	0, 0, 61, 0, 0, 62, 58, 0, 0, 59,
	0, 0, 0, 0, 0, 0, 57, 0, 0, 0,
	60, 0, 0, 49, 50, 0, 63, 0, 53, 54,
	55, 70, 65, 85, 141, 0, 0, 0, 51, 56,
	52, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 74, 0, 0, 0, 0, 0,
	61, 0, 0, 62, 58, 0, 0, 59, 0, 0,
	0, 0, 0, 0, 57, 0, 0, 0, 60, 0,
	0, 49, 50, 0, 0, 84, 53, 54, 63, 0,
	0, 0, 55, 70, 65, 85, 0, 0, 0, 0,
	51, 56, 52, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 74, 0, 0, 0,
	0, 0, 61, 0, 0, 62, 58, 0, 0, 59,
	0, 0, 0, 0, 0, 0, 57, 0, 0, 0,
	60, 0, 0, 49, 50, 0, 63, 0, 53, 54,
	55, 70, 65, 85, 0, 0, 0, 0, 51, 56,
	52, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 74, 0, 0, 0, 0, 0,
	61, 0, 0, 62, 58, 0, 0, 59, 0, 0,
	0, 0, 0, 0, 57, 0, 0, 0, 60, 0,
	0, 49, 50, 0, 63, 0, 53, 54, 55, 70,
	65, 43, 0, 0, 0, 0, 51, 56, 52, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 74, 0, 0, 0, 0, 0, 61, 285,
	0, 62, 58, 0, 0, 59, 0, 0, 0, 0,
	0, 0, 57, 195, 0, 0, 60, 0, 0, 49,
	50, 266, 0, 0, 53, 54, 96, 97, 0, 95,
	0, 265, 98, 101, 87, 88, 91, 92, 102, 100,
	93, 0, 94, 99, 0, 195, 0, 0, 0, 90,
	89, 0, 197, 0, 0, 0, 0, 0, 96, 97,
	0, 95, 196, 0, 98, 101, 87, 88, 91, 92,
	102, 100, 93, 0, 94, 99, 195, 0, 0, 0,
	0, 90, 89, 222, 0, 0, 0, 0, 0, 96,
	97, 0, 95, 221, 0, 98, 101, 87, 88, 91,
	92, 102, 100, 93, 0, 94, 99, 195, 0, 0,
	0, 0, 90, 89, 0, 0, 0, 0, 0, 0,
	96, 97, 0, 95, 0, 0, 98, 101, 87, 88,
	91, 92, 102, 100, 93, 337, 94, 99, 0, 0,
	0, 0, 0, 90, 89, 96, 97, 338, 95, 0,
	0, 98, 101, 87, 88, 91, 92, 102, 100, 0,
	96, 97, 99, 95, 0, 0, 98, 101, 87, 88,
	91, 92, 102, 100, 93, 267, 94, 99, 0, 0,
	0, 0, 0, 90, 89, 0, 0, 268, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	96, 97, 0, 95, 0, 125, 98, 101, 87, 88,
	91, 92, 102, 100, 93, 0, 94, 99, 0, 96,
	97, 364, 95, 90, 89, 98, 101, 87, 88, 91,
	92, 102, 100, 93, 0, 94, 99, 153, 0, 0,
	0, 0, 90, 89, 0, 0, 96, 97, 0, 95,
	0, 0, 98, 101, 87, 88, 91, 92, 102, 100,
	93, 296, 94, 99, 0, 96, 97, 0, 95, 90,
	89, 98, 101, 87, 88, 91, 92, 102, 100, 93,
	0, 94, 99, 0, 0, 0, 0, 0, 90, 89,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 96,
	97, 0, 95, 0, 0, 98, 101, 87, 88, 91,
	92, 102, 100, 93, 0, 94, 99, 0, 96, 97,
	256, 95, 90, 89, 98, 101, 87, 88, 91, 92,
	102, 100, 93, 250, 94, 99, 0, 0, 0, 0,
	0, 90, 89, 0, 0, 96, 97, 0, 95, 0,
	0, 98, 101, 87, 88, 91, 92, 102, 100, 93,
	156, 94, 99, 0, 0, 0, 0, 0, 90, 89,
	0, 96, 97, 0, 95, 0, 0, 98, 101, 87,
	88, 91, 92, 102, 100, 93, 0, 94, 99, 0,
	0, 0, 0, 0, 90, 89, 0, 0, 96, 97,
	0, 95, 0, 0, 98, 101, 87, 88, 91, 92,
	102, 100, 93, 0, 94, 99, 0, 96, 97, 0,
	95, 90, 89, 98, 101, 87, 88, 91, 92, 102,
	100, 93, 86, 94, 99, 0, 96, 97, 0, 95,
	90, 89, 98, 101, 87, 88, 91, 92, 102, 100,
	93, 0, 94, 99, 0, 0, 0, 0, 0, 90,
	89,
}

var yyPact = [...]int16{
	4, 196, 641, -1000, -1000, -1000, 818, 207, 141, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -56, 1411, -1000, -1000, -1000, 1945, 759, -1000, 211,
	-1000, -1000, -1000, -1000, -1000, -1000, 293, -1000, 233, -1000,
	-1000, -1000, -1000, 700, 190, 30, 30, 236, 1469, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1469, 1469, 1469,
	1469, 1469, 1469, 189, 163, 993, 188, 1349, -1000, 121,
	1469, -1000, -1000, 30, 161, 207, 141, -1000, -1000, 92,
	-1000, 1469, 281, 1926, 1291, 1113, 1469, 1469, 1469, 1469,
	1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469,
	1469, 1469, 1469, -1000, 207, 30, 1469, 935, 30, -1000,
	1113, 1469, 877, 30, 207, -1000, 498, 268, 148, -1000,
	113, 10, 65, 184, 30, -1000, 1793, -1000, -1000, -1000,
	-1000, -1000, -1000, 1469, 150, -1000, 1229, 222, -1000, 1964,
	1171, -1000, 1648, 265, -1000, 1113, 1747, 191, 153, 141,
	-1000, -1000, -1000, 700, 1793, 1469, 1055, 1899, 1527, 1617,
	1964, -23, -23, 544, 172, -23, -23, 1673, 1673, 69,
	-8, -23, 15, 15, -1000, -1000, -1000, 141, 0, 1873,
	16, 166, -1000, 181, 1964, 119, -1000, 261, 1586, 1728,
	165, -1000, 179, -1000, 141, 1469, -1000, -1000, -1000, -1000,
	-1000, 153, -1000, 132, -1000, 1469, 153, 153, -1000, -1000,
	34, -1, -1000, 1846, -1000, -1000, 1964, 153, 66, -1000,
	1964, -1000, -1000, -1000, -1000, 1554, 257, -1000, 171, 30,
	64, -1000, -1000, -1000, -1000, -1000, -1000, 153, -1000, -1000,
	-1000, -1000, -1000, -22, 153, 149, -1000, 1793, 1827, 1527,
	1527, 1793, -1000, -1000, 1469, 153, -1000, 1469, 1469, -1000,
	134, -1000, 1469, -1000, -1000, -1000, -1000, -1000, 1469, -1000,
	114, -1000, 1964, 239, 143, 1964, -24, 92, 153, -1000,
	153, 1469, -1000, -1000, 153, -1000, -1000, -1000, -1000, -1000,
	-2, 153, 68, -1000, 109, -1000, 1527, 1793, -1000, 1793,
	-1000, -1000, 1964, -36, 93, 1964, 1964, -1000, 1964, 1688,
	-1000, -1000, -1000, -1000, 153, -1000, 1469, -1000, 92, -39,
	1964, -1000, 153, 1469, -1000, -1000, 231, 3, -1000, -5,
	1793, -1000, -1000, -1000, 1469, -1000, 1469, -1000, 1469, 238,
	1964, -1000, 1469, -41, 1964, 30, 2, 153, 1469, 153,
	-1000, 1964, 48, 1774, -1000, -1000, 1964, 1469, -1000, 153,
	-1000, 1964, -48, -1000, -1000, 1964, -1000, 1469, 1964,
}

var yyPgo = [...]int16{
	0, 350, 310, 328, 10, 348, 346, 344, 342, 341,
	338, 8, 271, 336, 333, 332, 331, 330, 329, 327,
	323, 0, 3, 149, 321, 175, 11, 320, 319, 1,
	318, 30, 316, 314, 313, 312, 308, 5, 302, 301,
	291, 289, 287, 285, 2, 284, 281, 279, 277, 265,
	257, 242, 4, 7,
}

var yyR1 = [...]int8{
	0, 52, 52, 52, 52, 51, 51, 51, 6, 6,
	6, 7, 7, 7, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 50, 50, 50, 45, 25, 25,
	25, 25, 25, 25, 25, 27, 24, 24, 24, 24,
	24, 26, 26, 23, 29, 29, 29, 29, 30, 30,
	35, 35, 35, 35, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 28, 28, 28, 28, 28,
	28, 19, 17, 18, 15, 16, 16, 16, 16, 16,
	16, 16, 16, 20, 20, 8, 10, 10, 9, 2,
	2, 4, 5, 5, 3, 11, 11, 11, 11, 1,
	1, 14, 14, 14, 14, 14, 14, 14, 14, 13,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 33, 33, 53, 53,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 22, 22, 39,
	39, 39, 39, 39, 40, 40, 40, 37, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	38, 38, 38, 38, 38, 38, 38, 38, 41, 41,
	42, 42, 43, 43, 44, 31, 46, 46, 46, 46,
	47, 47, 47, 47, 47, 47, 49, 49, 49, 49,
	48, 48, 48, 48, 48, 48, 48, 48,
}

var yyR2 = [...]int8{
	0, 1, 1, 2, 2, 2, 2, 1, 2, 1,
	1, 2, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	1, 4, 5, 5, 1, 3, 3, 5, 1, 3,
	6, 5, 4, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 5, 7, 6, 6, 5, 6,
	5, 5, 4, 1, 3, 3, 1, 2, 3, 1,
	1, 2, 3, 3, 2, 3, 2, 1, 3, 1,
	1, 2, 4, 4, 6, 3, 5, 5, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 1, 2,
	4, 4, 4, 6, 8, 3, 3, 5, 4, 4,
	4, 6, 8, 3, 3, 5, 4, 1, 0, 3,
	2, 3, 2, 3, 2, 3, 3, 3, 2, 3,
	3, 1, 2, 2, 3, 3, 4, 4, 4, 4,
	3, 3, 4, 4, 4, 4, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 5, 7, 3, 5,
	2, 3, 5, 5, 7, 3, 5, 6, 3, 4,
	4, 6, 3, 5, 6, 8, 5, 7,
}

var yyChk = [...]int16{
	-1000, -51, 74, 2, 8, -6, -7, -12, -52, -20,
	-15, -16, -17, -19, -18, -45, -13, -4, -50, 4,
	28, -10, 22, 26, 25, 27, -21, -5, -47, -14,
	-49, -8, -41, -42, -43, -44, -31, -28, -34, -39,
	-36, -33, -32, 14, -46, 36, -1, -48, 69, 62,
	63, 19, 21, 67, 68, 11, 20, 55, 45, 48,
	59, 41, 44, 7, -40, 13, -26, -38, -3, -23,
	12, 38, 46, 39, 35, -12, -52, 4, 28, 71,
	-9, 70, -31, -21, 4, 14, 57, 50, 51, 66,
	65, 52, 53, 56, 58, 45, 42, 43, 48, 59,
	55, 49, 54, 15, -12, 5, 13, 12, 7, -3,
	14, 13, 12, 7, -12, 15, -21, -37, -31, 15,
	-31, -31, 16, -53, 5, 28, -21, -21, -21, -21,
	-21, -21, -21, 13, -53, 17, 5, 57, 17, -21,
	13, 15, -21, -37, -3, 14, -21, -31, 13, -52,
	-2, -3, -4, 14, -21, 23, 4, -21, 4, -21,
	-21, -21, -21, -21, -21, -21, -21, -21, -21, -21,
	-21, -21, -21, -21, -21, -21, -21, -52, -31, -21,
	-22, -11, 16, -53, -21, -31, -31, -37, -21, -21,
	-11, 16, -53, -31, -52, 29, 15, 5, 15, 5,
	5, 29, 15, 14, -3, 57, 29, 40, -2, 28,
	16, -31, -2, -21, 17, 17, -21, 17, -44, 17,
	-21, 15, 5, 15, 5, -21, -37, 16, -53, 12,
	-25, -24, -26, -23, -31, -27, -35, 12, 31, 32,
	33, 30, 37, 13, 55, 39, -2, -21, -21, 4,
	4, -21, -2, -3, 57, 29, 17, 29, 5, 16,
	-53, 16, 57, 15, 5, 15, 5, 17, 29, 16,
	-53, 16, -21, -25, -31, -21, -25, -25, 40, -2,
	29, 57, 17, -25, 17, 15, 5, 15, 5, 16,
	-31, 17, -25, -25, 12, -2, 4, -21, -2, -21,
	-2, -2, -21, -25, -22, -21, -21, 16, -21, -21,
	16, 5, 15, 5, 29, 15, 57, -2, -25, -25,
	-21, -25, 29, 57, -25, 16, -30, 16, -29, -31,
	-21, -2, -2, -2, 57, 17, 29, 17, 29, -25,
	-21, -2, 57, -25, -21, 5, 16, 40, 57, 29,
	-2, -21, -22, -21, 5, 15, -21, 57, -29, 40,
	-25, -21, -25, 17, 17, -21, -25, 57, -21,
}

var yyDef = [...]int16{
	0, -2, 0, 7, 6, 5, 9, 10, 12, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 1,
	2, 83, 0, 72, 71, 73, 27, 0, 24, 25,
	26, 86, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 0, 0, 0, 0, 0, 0, 178,
	179, 180, 181, 182, 183, 184, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 99, 100, 0, 0, 8, 11, 3, 4, 0,
	87, 0, 58, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 91, 0, 0, 148, 0, 0, 163,
	0, 0, 0, 0, 0, 94, 27, 0, 0, 190,
	0, 101, 0, 0, 0, 128, 0, 65, 66, 67,
	68, 69, 70, 0, 0, 150, 0, 0, 152, 154,
	0, 158, 0, 0, 162, 0, 0, 0, 0, 13,
	84, 89, 90, 0, 0, 0, 0, 0, 0, 0,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 93, 105, 147,
	0, 0, 136, 0, 97, 58, 135, 0, 0, 0,
	0, 144, 0, 143, 92, 0, 164, 171, 165, 170,
	188, 0, 191, 0, 195, 0, 0, 0, 198, 129,
	0, 202, 85, 0, 149, 151, 156, 0, 0, 153,
	155, 159, 177, 160, 176, 0, 0, 126, 0, 0,
	0, 28, 29, 30, 31, 32, 33, 0, 36, 37,
	38, 39, 40, 0, 0, 0, 88, 0, 0, 0,
	0, 0, 82, -2, 0, 0, 130, 148, 96, 131,
	0, 138, 0, 166, 174, 167, 175, 139, 0, 140,
	0, 146, 157, 0, 0, 102, 103, 0, 0, 199,
	0, 0, 132, 41, 0, 168, 173, 169, 172, 127,
	200, 0, 0, 35, 0, 74, 0, 0, 78, 0,
	80, 81, 106, 107, 0, 147, 95, 137, 98, 0,
	145, 189, 192, 186, 0, 193, 0, 196, 0, 203,
	206, 42, 0, 0, 43, 34, 0, 53, 48, 44,
	0, 76, 77, 79, 0, 133, 148, 141, 0, 0,
	104, 197, 0, 201, 204, 0, 52, 0, 0, 0,
	75, 108, 0, 0, 187, 194, 207, 0, 49, 0,
	51, 45, 46, 134, 142, 205, 50, 0, 47,
}

var yyTok1 = [...]int8{
	1,
}

var yyTok2 = [...]int8{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76,
}

var yyTok3 = [...]int8{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(yyPact[state])
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && int(yyChk[int(yyAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || int(yyExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := int(yyExca[i])
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(yyTok1[0])
		goto out
	}
	if char < len(yyTok1) {
		token = int(yyTok1[char])
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = int(yyTok2[char-yyPrivate])
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = int(yyTok3[i+0])
		if token == char {
			token = int(yyTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(yyTok2[1]) /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = int(yyPact[yystate])
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = int(yyAct[yyn])
	if int(yyChk[yyn]) == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = int(yyDef[yystate])
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && int(yyExca[xi+1]) == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = int(yyExca[xi+0])
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = int(yyExca[xi+1])
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = int(yyPact[yyS[yyp].yys]) + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = int(yyAct[yyn]) /* simulate a shift of "error" */
					if int(yyChk[yystate]) == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= int(yyR2[yyn])
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = int(yyR1[yyn])
	yyg := int(yyPgo[yyn])
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = int(yyAct[yyg])
	} else {
		yystate = int(yyAct[yyj])
		if int(yyChk[yystate]) != -yyn {
			yystate = int(yyAct[yyg])
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 5:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:153
		{
			yylex.(*parser).parseResult = yyDollar[2].aststmts
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:156
		{
			yylex.(*parser).unexpected("", "")
		}
	case 8:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:161
		{
			s := yyDollar[1].aststmts
			s = append(s, yyDollar[2].node)
			yyVAL.aststmts = s
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:168
		{
			yyVAL.aststmts = plast.Stmts{yyDollar[1].node}
		}
	case 11:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:172
		{
			yyVAL.aststmts = plast.Stmts{yyDollar[1].node}
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:174
		{
			yyVAL.aststmts = plast.Stmts{}
		}
	case 13:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:176
		{
			s := yyDollar[1].aststmts
			s = append(s, yyDollar[2].node)
			yyVAL.aststmts = s
		}
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:210
		{
			yyVAL.node = yyDollar[2].node
		}
	case 35:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:216
		{
			yyVAL.node = yyDollar[2].node
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:223
		{
			yyVAL.node = &ast.Node{}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:225
		{
			yyVAL.node = &ast.Node{}
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:227
		{
			yyVAL.node = &ast.Node{}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:229
		{
			yyVAL.node = &ast.Node{}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:231
		{
			yyVAL.node = &ast.Node{}
		}
	case 41:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:236
		{
			yyVAL.node = &ast.Node{}
		}
	case 42:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:238
		{
			yyVAL.node = &ast.Node{}
		}
	case 43:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:242
		{
			yyVAL.node = &ast.Node{}
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:246
		{
			yyVAL.node = &ast.Node{}
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:248
		{
			yyVAL.node = &ast.Node{}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:250
		{
			yyVAL.node = &ast.Node{}
		}
	case 47:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:252
		{
			yyVAL.node = &ast.Node{}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:257
		{
			yyVAL.node = &ast.Node{}
		}
	case 50:
		yyDollar = yyS[yypt-6 : yypt+1]
//line gram.y:260
		{
			yyVAL.node = &ast.Node{}
		}
	case 51:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:262
		{
			yyVAL.node = &ast.Node{}
		}
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:264
		{
			yyVAL.node = &ast.Node{}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:266
		{
			yyVAL.node = &ast.Node{}
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:283
		{
			yyVAL.node = &ast.Node{}
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:285
		{
			yyVAL.node = &ast.Node{}
		}
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:287
		{
			yyVAL.node = &ast.Node{}
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:289
		{
			yyVAL.node = &ast.Node{}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:291
		{
			yyVAL.node = &ast.Node{}
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:293
		{
			yyVAL.node = &ast.Node{}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:297
		{
			yyVAL.node = &ast.Node{}
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:301
		{
			yyVAL.node = &ast.Node{}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:305
		{
			yyVAL.node = &ast.Node{}
		}
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:314
		{
			yyVAL.node = &ast.Node{}
		}
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
//line gram.y:323
		{
			yyVAL.node = &ast.Node{}
		}
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
//line gram.y:325
		{
			yyVAL.node = &ast.Node{}
		}
	case 77:
		yyDollar = yyS[yypt-6 : yypt+1]
//line gram.y:327
		{
			yyVAL.node = &ast.Node{}
		}
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:329
		{
			yyVAL.node = &ast.Node{}
		}
	case 79:
		yyDollar = yyS[yypt-6 : yypt+1]
//line gram.y:331
		{
			yyVAL.node = &ast.Node{}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:333
		{
			yyVAL.node = &ast.Node{}
		}
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:335
		{
			yyVAL.node = &ast.Node{}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:337
		{
			yyVAL.node = &ast.Node{}
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:341
		{
			yyVAL.node = &ast.Node{}
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:343
		{
			yyVAL.node = &ast.Node{}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:347
		{
			yyVAL.ifitem = &ast.Node{}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:351
		{
			yyVAL.iflist = &ast.Node{}
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:353
		{
			yyVAL.iflist = &ast.Node{}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:357
		{
			yyVAL.ifitem = &ast.Node{}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:366
		{
			yyVAL.node = &ast.Node{}
		}
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:370
		{
			yyVAL.node = &ast.Node{}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:372
		{
			yyVAL.node = &ast.Node{}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:376
		{
			yyVAL.node = &ast.Node{}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:381
		{
			yyVAL.nodes = &ast.Node{}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:383
		{
			yyVAL.nodes = &ast.Node{}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:385
		{
			yyVAL.nodes = &ast.Node{}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:387
		{
			yyVAL.nodes = &ast.Node{}
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:395
		{
			yyVAL.node = &ast.Node{}
		}
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:397
		{
			yyVAL.node = &ast.Node{}
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:399
		{
			yyVAL.node = &ast.Node{}
		}
	case 104:
		yyDollar = yyS[yypt-6 : yypt+1]
//line gram.y:401
		{
			yyVAL.node = &ast.Node{}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:403
		{
			yyVAL.node = &ast.Node{}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:405
		{
			yyVAL.node = &ast.Node{}
		}
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:407
		{
			yyVAL.node = &ast.Node{}
		}
	case 108:
		yyDollar = yyS[yypt-7 : yypt+1]
//line gram.y:409
		{
			yyVAL.node = &ast.Node{}
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:414
		{
			yyVAL.node = &ast.Node{}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:418
		{
			yyVAL.node = &ast.Node{}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:420
		{
			yyVAL.node = &ast.Node{}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:422
		{
			yyVAL.node = &ast.Node{}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:424
		{
			yyVAL.node = &ast.Node{}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:426
		{
			yyVAL.node = &ast.Node{}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:428
		{
			yyVAL.node = &ast.Node{}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:430
		{
			yyVAL.node = &ast.Node{}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:432
		{
			yyVAL.node = &ast.Node{}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:434
		{
			yyVAL.node = &ast.Node{}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:436
		{
			yyVAL.node = &ast.Node{}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:438
		{
			yyVAL.node = &ast.Node{}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:440
		{
			yyVAL.node = &ast.Node{}
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:442
		{
			yyVAL.node = &ast.Node{}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:444
		{
			yyVAL.node = &ast.Node{}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:446
		{
			yyVAL.node = &ast.Node{}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:448
		{
			yyVAL.node = &ast.Node{}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:453
		{
			yyVAL.node = &ast.Node{}
		}
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:455
		{
			yyVAL.node = &ast.Node{}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:467
		{
			yyVAL.node = &ast.Node{}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:469
		{
			yyVAL.node = &ast.Node{}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:471
		{
			yyVAL.node = &ast.Node{}
		}
	case 133:
		yyDollar = yyS[yypt-6 : yypt+1]
//line gram.y:474
		{
			yyVAL.node = &ast.Node{}
		}
	case 134:
		yyDollar = yyS[yypt-8 : yypt+1]
//line gram.y:476
		{
			yyVAL.node = &ast.Node{}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:479
		{
			yyVAL.node = &ast.Node{}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:482
		{
			yyVAL.node = &ast.Node{}
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:484
		{
			yyVAL.node = &ast.Node{}
		}
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:486
		{
			yyVAL.node = &ast.Node{}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:489
		{
			yyVAL.node = &ast.Node{}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:491
		{
			yyVAL.node = &ast.Node{}
		}
	case 141:
		yyDollar = yyS[yypt-6 : yypt+1]
//line gram.y:494
		{
			yyVAL.node = &ast.Node{}
		}
	case 142:
		yyDollar = yyS[yypt-8 : yypt+1]
//line gram.y:496
		{
			yyVAL.node = &ast.Node{}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:499
		{
			yyVAL.node = &ast.Node{}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:502
		{
			yyVAL.node = &ast.Node{}
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:504
		{
			yyVAL.node = &ast.Node{}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:506
		{
			yyVAL.node = &ast.Node{}
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line gram.y:511
		{
			yyVAL.node = nil
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:515
		{
			yyVAL.node = &ast.Node{}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:517
		{
			yyVAL.node = &ast.Node{}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:519
		{
			yyVAL.node = &ast.Node{}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:521
		{
			yyVAL.node = &ast.Node{}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:523
		{
			yyVAL.node = &ast.Node{}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:527
		{
			yyVAL.node = &ast.Node{}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:529
		{
			yyVAL.node = &ast.Node{}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:531
		{
			yyVAL.node = &ast.Node{}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:538
		{
			yyVAL.node = &ast.Node{}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:540
		{
			yyVAL.node = &ast.Node{}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:542
		{
			yyVAL.node = &ast.Node{}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:544
		{
			yyVAL.node = &ast.Node{}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:546
		{
			yyVAL.node = &ast.Node{}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:548
		{
			yyVAL.node = &ast.Node{}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:550
		{
			yyVAL.node = &ast.Node{}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:552
		{
			yyVAL.node = &ast.Node{}
		}
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:554
		{
			yyVAL.node = &ast.Node{}
		}
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:556
		{
			yyVAL.node = &ast.Node{}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:558
		{
			yyVAL.node = &ast.Node{}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:560
		{
			yyVAL.node = &ast.Node{}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:564
		{
			yyVAL.node = &ast.Node{}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:566
		{
			yyVAL.node = &ast.Node{}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:568
		{
			yyVAL.node = &ast.Node{}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:570
		{
			yyVAL.node = &ast.Node{}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:572
		{
			yyVAL.node = &ast.Node{}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:574
		{
			yyVAL.node = &ast.Node{}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:576
		{
			yyVAL.node = &ast.Node{}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:578
		{
			yyVAL.node = &ast.Node{}
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:583
		{
			yyVAL.node = &ast.Node{}
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:585
		{
			yyVAL.node = &ast.Node{}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:590
		{
			yyVAL.node = &ast.Node{}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:592
		{
			yyVAL.node = &ast.Node{}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:597
		{
			yyVAL.node = &ast.Node{}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:599
		{
			yyVAL.node = &ast.Node{}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:605
		{
			yyVAL.node = &ast.Node{}
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line gram.y:609
		{
			yyVAL.node = &ast.Node{}
		}
	case 186:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:616
		{
			yyVAL.node = &ast.Node{}
		}
	case 187:
		yyDollar = yyS[yypt-7 : yypt+1]
//line gram.y:618
		{
			yyVAL.node = &ast.Node{}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:620
		{
			yyVAL.node = &ast.Node{}
		}
	case 189:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:622
		{
			yyVAL.node = &ast.Node{}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line gram.y:627
		{
			yyVAL.node = &ast.Node{}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:629
		{
			yyVAL.node = &ast.Node{}
		}
	case 192:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:631
		{
			yyVAL.node = &ast.Node{}
		}
	case 193:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:633
		{
			yyVAL.node = &ast.Node{}
		}
	case 194:
		yyDollar = yyS[yypt-7 : yypt+1]
//line gram.y:635
		{
			yyVAL.node = &ast.Node{}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:637
		{
			yyVAL.node = &ast.Node{}
		}
	case 196:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:641
		{
			yyVAL.node = &ast.Node{}
		}
	case 197:
		yyDollar = yyS[yypt-6 : yypt+1]
//line gram.y:643
		{
			yyVAL.node = &ast.Node{}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:645
		{
			yyVAL.node = &ast.Node{}
		}
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:647
		{
			yyVAL.node = &ast.Node{}
		}
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line gram.y:651
		{
			yyVAL.node = &ast.Node{}
		}
	case 201:
		yyDollar = yyS[yypt-6 : yypt+1]
//line gram.y:653
		{
			yyVAL.node = &ast.Node{}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line gram.y:655
		{
			yyVAL.node = &ast.Node{}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:657
		{
			yyVAL.node = &ast.Node{}
		}
	case 204:
		yyDollar = yyS[yypt-6 : yypt+1]
//line gram.y:659
		{
			yyVAL.node = &ast.Node{}
		}
	case 205:
		yyDollar = yyS[yypt-8 : yypt+1]
//line gram.y:661
		{
			yyVAL.node = &ast.Node{}
		}
	case 206:
		yyDollar = yyS[yypt-5 : yypt+1]
//line gram.y:663
		{
			yyVAL.node = &ast.Node{}
		}
	case 207:
		yyDollar = yyS[yypt-7 : yypt+1]
//line gram.y:665
		{
			yyVAL.node = &ast.Node{}
		}
	}
	goto yystack /* stack new state and value */
}
